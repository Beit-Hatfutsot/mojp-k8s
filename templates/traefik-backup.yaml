{{ if .Values.traefik.enabled }}{{ if .Values.traefik.backupJob }}
#apiVersion: batch/v1
#kind: Job
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: traefik-backup
spec:
  schedule: "@daily"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          name: traefik-backup
        spec:
          nodeSelector:
            # we use shared host to simplify the configuration so we have to limit the pod to a specific host name
            {{ if .Values.traefik.nodeHostName }}
            kubernetes.io/hostname: {{ .Values.traefik.nodeHostName | quote }}
            {{ else }}
            {{ if .Values.traefik.nodePool }}
            cloud.google.com/gke-nodepool: {{ .Values.traefik.nodePool | quote }}
            {{ else }}
            cloud.google.com/gke-nodepool: {{ .Values.global.defaultNodePool | quote }}
            {{ end }}
            {{ end }}
          containers:
          - name: ops
            image: orihoch/sk8sops:pipelines-gcs@sha256:a6e8f94c2e68fc8da552abcbdac865763d40e79895b87ff06a98ebd588070cf0
            resources: {"requests": {"cpu": "0.01", "memory": "100Mi"}}
            command:
            - bash
            - "-c"
            - >
              source ~/.bashrc;
              gcloud config set project "bh-org-01" &&
              echo "gs://mojp-k8s-backups/{{ .Values.global.environmentName }}/traefik-acme/`date +%Y-%m-%d-%H-%M`/" > /latest &&
              gsutil -m rsync -r /traefik-acme `cat /latest` &&
              gsutil cp /latest gs://mojp-k8s-backups/{{ .Values.global.environmentName }}/traefik-acme/latest
            volumeMounts:
            - name: k8s-ops
              mountPath: /k8s-ops
              readOnly: true
            - name: traefik-acme
              mountPath: /traefik-acme
          volumes:
          - name: k8s-ops
            secret:
              secretName: ops
          - name: traefik-acme
            hostPath:
              type: DirectoryOrCreate
              path: /var/traefik-acme-{{ .Values.global.environmentName }}
          restartPolicy: Never
{{ end }}{{ end }}
