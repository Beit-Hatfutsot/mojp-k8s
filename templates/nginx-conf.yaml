{{ if .Values.nginx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default.conf: |
    server {
        listen 80;
        server_name  _;
        include /etc/nginx/conf.d/healthcheck.inc;
    }

    {{ if .Values.pipelines.enabled }}
    server {
        listen 8081;
        server_name  _;
        location / {
          proxy_pass http://pipelines:5000;
          include /etc/nginx/conf.d/restricted.inc;
        }
    }
    {{ end }}

    {{ if .Values.global.enableSitemap }}
    proxy_cache_path /var/cache/nginx/sitemap levels=1:2 keys_zone=sitemap:5m max_size=1g inactive=1440m use_temp_path=off;
    server {
        listen 8082;
        server_name  _;
        location /sitemap {
          proxy_cache sitemap;
          proxy_cache_use_stale error timeout;
          proxy_pass http://minio:9000;
        }
    }
    {{ end }}

    {{ if .Values.kibana.enabled }}
    server {
        listen 8083;
        server_name  _;
        location / {
          proxy_pass http://kibana:5601;
          include /etc/nginx/conf.d/restricted.inc;
        }
    }
    {{ end }}

    {{ if .Values.elasticsearch.enabled }}
    server {
        listen 8084;
        server_name  _;
        location / {
          proxy_pass http://elasticsearch:9200;
          include /etc/nginx/conf.d/restricted.inc;
        }
    }
    {{ end }}

  healthcheck.inc: |
    location = / {
        return 200 'it works!';
        add_header Content-Type text/plain;
    }

  {{ if .Values.nginx.htpasswdSecretName }}
  restricted.inc: |
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/htpasswd/secret-nginx-htpasswd;
  {{ end }}

{{ end }}
